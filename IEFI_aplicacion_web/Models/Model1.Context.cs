//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IEFI_aplicacion_web.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Veterinari_PampitaEntities1 : DbContext
    {
        public Veterinari_PampitaEntities1()
            : base("name=Veterinari_PampitaEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Animales> Animales { get; set; }
        public virtual DbSet<Dueños> Dueños { get; set; }
        public virtual DbSet<Mascotas> Mascotas { get; set; }
        public virtual DbSet<Razas> Razas { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<VistaAnimales> VistaAnimales { get; set; }
        public virtual DbSet<VistaMascotas> VistaMascotas { get; set; }
        public virtual DbSet<VistaRazas> VistaRazas { get; set; }
    
        public virtual int ActualizarAnimal(Nullable<int> iD, string nombre)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarAnimal", iDParameter, nombreParameter);
        }
    
        public virtual int ActualizarDueño(Nullable<int> iD, string nuevoNombre)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nuevoNombreParameter = nuevoNombre != null ?
                new ObjectParameter("NuevoNombre", nuevoNombre) :
                new ObjectParameter("NuevoNombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarDueño", iDParameter, nuevoNombreParameter);
        }
    
        public virtual int ActualizarMascota(Nullable<int> iD, string nuevoNombre, string nuevoApodo, Nullable<int> nuevoID_Raza, Nullable<int> nuevoID_Dueño)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nuevoNombreParameter = nuevoNombre != null ?
                new ObjectParameter("NuevoNombre", nuevoNombre) :
                new ObjectParameter("NuevoNombre", typeof(string));
    
            var nuevoApodoParameter = nuevoApodo != null ?
                new ObjectParameter("NuevoApodo", nuevoApodo) :
                new ObjectParameter("NuevoApodo", typeof(string));
    
            var nuevoID_RazaParameter = nuevoID_Raza.HasValue ?
                new ObjectParameter("NuevoID_Raza", nuevoID_Raza) :
                new ObjectParameter("NuevoID_Raza", typeof(int));
    
            var nuevoID_DueñoParameter = nuevoID_Dueño.HasValue ?
                new ObjectParameter("NuevoID_Dueño", nuevoID_Dueño) :
                new ObjectParameter("NuevoID_Dueño", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarMascota", iDParameter, nuevoNombreParameter, nuevoApodoParameter, nuevoID_RazaParameter, nuevoID_DueñoParameter);
        }
    
        public virtual int ActualizarRaza(Nullable<int> iD, string nuevoNombre, Nullable<int> nuevoID_Animal)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nuevoNombreParameter = nuevoNombre != null ?
                new ObjectParameter("NuevoNombre", nuevoNombre) :
                new ObjectParameter("NuevoNombre", typeof(string));
    
            var nuevoID_AnimalParameter = nuevoID_Animal.HasValue ?
                new ObjectParameter("NuevoID_Animal", nuevoID_Animal) :
                new ObjectParameter("NuevoID_Animal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarRaza", iDParameter, nuevoNombreParameter, nuevoID_AnimalParameter);
        }
    
        public virtual int BajaLogicaAnimales(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BajaLogicaAnimales", iDParameter);
        }
    
        public virtual int BajaLogicaDueño(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BajaLogicaDueño", iDParameter);
        }
    
        public virtual int BajaLogicaMascota(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BajaLogicaMascota", iDParameter);
        }
    
        public virtual int BajaLogicaRazas(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BajaLogicaRazas", iDParameter);
        }
    
        public virtual ObjectResult<BuscarAnimal_Result> BuscarAnimal(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarAnimal_Result>("BuscarAnimal", nombreParameter);
        }
    
        public virtual ObjectResult<BuscarDueño_Result> BuscarDueño(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarDueño_Result>("BuscarDueño", nombreParameter);
        }
    
        public virtual ObjectResult<BuscarMascota_Result> BuscarMascota(string nombre, string apodo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apodoParameter = apodo != null ?
                new ObjectParameter("Apodo", apodo) :
                new ObjectParameter("Apodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarMascota_Result>("BuscarMascota", nombreParameter, apodoParameter);
        }
    
        public virtual ObjectResult<BuscarRaza_Result> BuscarRaza(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarRaza_Result>("BuscarRaza", nombreParameter);
        }
    
        public virtual int InsertarNuevaDueño(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarNuevaDueño", nombreParameter);
        }
    
        public virtual int InsertarNuevaMascota(string nombre, string apodo, Nullable<int> iD_Raza, Nullable<int> iD_Dueño)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apodoParameter = apodo != null ?
                new ObjectParameter("Apodo", apodo) :
                new ObjectParameter("Apodo", typeof(string));
    
            var iD_RazaParameter = iD_Raza.HasValue ?
                new ObjectParameter("ID_Raza", iD_Raza) :
                new ObjectParameter("ID_Raza", typeof(int));
    
            var iD_DueñoParameter = iD_Dueño.HasValue ?
                new ObjectParameter("ID_Dueño", iD_Dueño) :
                new ObjectParameter("ID_Dueño", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarNuevaMascota", nombreParameter, apodoParameter, iD_RazaParameter, iD_DueñoParameter);
        }
    
        public virtual int InsertarNuevaRaza(string nombre, Nullable<int> iD_Animal)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var iD_AnimalParameter = iD_Animal.HasValue ?
                new ObjectParameter("ID_Animal", iD_Animal) :
                new ObjectParameter("ID_Animal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarNuevaRaza", nombreParameter, iD_AnimalParameter);
        }
    
        public virtual int InsertarNuevoAnimal(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarNuevoAnimal", nombreParameter);
        }
    
        public virtual int RecuperarAnimal(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecuperarAnimal", iDParameter);
        }
    
        public virtual int RecuperarDueño(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecuperarDueño", iDParameter);
        }
    
        public virtual int RecuperarMascota(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecuperarMascota", iDParameter);
        }
    
        public virtual int RecuperarRaza(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecuperarRaza", iDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TraerAnimales_Result> TraerAnimales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraerAnimales_Result>("TraerAnimales");
        }
    
        public virtual ObjectResult<TraerAnimalesBaja_Result> TraerAnimalesBaja()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraerAnimalesBaja_Result>("TraerAnimalesBaja");
        }
    
        public virtual ObjectResult<TraerDueños_Result> TraerDueños()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraerDueños_Result>("TraerDueños");
        }
    
        public virtual ObjectResult<TraerDueñosBaja_Result> TraerDueñosBaja()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraerDueñosBaja_Result>("TraerDueñosBaja");
        }
    
        public virtual ObjectResult<TraerMascotas_Result> TraerMascotas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraerMascotas_Result>("TraerMascotas");
        }
    
        public virtual ObjectResult<TraerMascotasBaja_Result> TraerMascotasBaja()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraerMascotasBaja_Result>("TraerMascotasBaja");
        }
    
        public virtual ObjectResult<TraerRazas_Result> TraerRazas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraerRazas_Result>("TraerRazas");
        }
    
        public virtual ObjectResult<TraerRazasBaja_Result> TraerRazasBaja()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraerRazasBaja_Result>("TraerRazasBaja");
        }
    }
}
